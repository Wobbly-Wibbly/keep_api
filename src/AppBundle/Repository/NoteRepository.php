<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Note;
use Doctrine\ORM\PersistentCollection;

/**
 * NoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NoteRepository extends \Doctrine\ORM\EntityRepository
{
    public function createFromPayload(array $payload, array $labels)
    {
        $note = new Note();
        $this->update($note, $payload);
        array_walk($labels, [$note, 'addLabel']);

        $this->getEntityManager()->persist( $note );
        $this->getEntityManager()->flush();

        return $note;
    }

    public function updateFromPayload(Note $note, array $payload, array $labels)
    {
        /** @var PersistentCollection $labels */
        $labelsSnapshot = $note->getLabels()->toArray();

        $toDelete = $this->getDeleteDiff($labelsSnapshot, $labels);
        array_walk($toDelete, [$note, 'removeLabel']);

        $toInsert = $this->getInsertDiff($labelsSnapshot, $labels);
        array_walk($toInsert, [$note, 'addLabel']);

        $this->update($note, $payload);

        $this->getEntityManager()->flush();

        return $note;
    }

    private function update(Note $note, array $payload)
    {
        $note->setTitle($payload['title']);
        $note->setColor($payload['color']);
        $note->setType($payload['type']);
        $note->setContent($payload['content']);

        return $note;
    }

    private function getDeleteDiff($snapshot, $current)
    {
        return array_udiff_assoc(
            $snapshot,
            $current,
            function($a, $b) { return $a === $b ? 0 : 1; }
        );
    }

    public function getInsertDiff($snapshot, $current)
    {
        return array_udiff_assoc(
            $current,
            $snapshot,
            function($a, $b) { return $a === $b ? 0 : 1; }
        );
    }
}
